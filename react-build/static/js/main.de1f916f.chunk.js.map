{"version":3,"sources":["services/fetch.js","hooks/useAuth.js","hooks/useUser.js","services/user.service.js","components/Header.js","components/Navigation.js","components/Persist.js","components/ConfiguredInterweave.js","_helpers/randomColor.js","components/Feed.js","hooks/useFeed.js","services/conversation.service.js","pages/Home.js","components/Form.js","pages/Login.js","services/authentication.service.js","pages/Register.js","components/ConfiguredQuill.js","hooks/useConversation.js","pages/Conversation.js","pages/Post.js","App.js","serviceWorker.js","index.js"],"names":["isDev","process","newFetch","url","headers","body","options","fullUrl","path","join","fetch","JSON","stringify","then","resp","ok","json","useAuth","useContext","AuthContext","useUser","token","setToken","isLoggedIn","setIsLoggedIn","useState","user","setUser","useEffect","Authorization","userService","u","catch","_","Search","props","className","placeholder","size","color","UserDropdown","open","setOpen","DropdownLink","to","other","DropdownItem","onClick","redirect","Dropdown","isOpen","toggle","nav","DropdownToggle","caret","name","DropdownMenu","right","divider","withRouter","first_name","undefined","history","push","NavLink","location","pathname","includes","children","Navigation","Persist","persist","debounce","data","window","localStorage","setItem","isEqual","this","getItem","onMount","parse","React","Component","defaultProps","ConfiguredInterweave","matchers","UrlMatcher","randomColor","username","randCol","seed","FeedItem","navigate","convo_id","title","Metadata","content","description","list","PeopleInvolved","people","contributors","length","creator","age","views","votes","comments","round","items","convo_ids","map","item","key","x","post","useFeed","didPersistLoad","feed","setFeed","method","conversationService","convos","Home","Field","render","msg","replace","Login","state","from","initialValues","email","password","onSubmit","actions","authenticationService","e","setErrors","setSubmitting","isSubmitting","type","disabled","Register","last_name","vals","setFieldError","validationSchema","Yup","shape","required","ConfiguredQuill","value","setValue","otherProps","theme","modules","toolbar","formats","onChange","useConversation","id","reload","conversation","setConvo","Title","userVote","updateVote","isContributor","TitleVote","setVote","nVote","Discussion","posts","setBody","submit","index","DiscussionItem","contributor","time_of_post","style","Comments","showing","setShowing","comment","Comment","time_of_comment","_showing","likes","upvoted","setUpvoted","fontSize","Conversation","match","params","setReload","toggleReload","setPost","vote","Post","setTitle","invited","setInvited","submitting","Editor","CollaboratorSection","Invite","inviteUser","newUser","toLowerCase","Spinner","css","currentTarget","val","invite","Collaborator","src","image","inputRef","focus","autoComplete","onKeyDown","ref","input","createContext","SecuredRoute","component","authenticated","rest","App","setPersistLoad","Provider","exact","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.de1f916f.chunk.js","sourcesContent":["import path from \"path\";\n\nconst isDev = () => !process.env.NODE_ENV || process.env.NODE_ENV === \"development\";\n\n/**\n *\n * @param {string} url\n * @param {import(\"http\").RequestOptions} options\n */\nexport default function newFetch(url, { headers, body, ...options }) {\n  const fullUrl = path.join(isDev() ? \"https://agile-tor-73556.herokuapp.com/api/v1\" : \"/api/v1\", url);\n\n  return fetch(fullUrl, {\n    headers: { \"Content-Type\": \"application/json\", ...headers },\n    ...options,\n    body: JSON.stringify(body)\n  }).then(resp => {\n    if (resp.ok) return resp.json();\n    throw resp;\n  });\n}\n","import { useContext } from \"react\";\nimport { AuthContext } from \"../App\";\n\nexport default function useAuth() {\n  return useContext(AuthContext);\n}\n","import { useState, useEffect } from \"react\";\n\nimport * as userService from \"../services/user.service\";\n\nimport useAuth from \"./useAuth\";\n\nexport default function useUser() {\n  const { token, setToken, isLoggedIn, setIsLoggedIn } = useAuth();\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    if (!token || !isLoggedIn) return;\n\n    const logout = () => {\n      setToken(null);\n      setIsLoggedIn(false);\n      setUser(null);\n    };\n\n    userService\n      .getUser(token)\n      .then(u => setUser(u))\n      .catch(_ => logout());\n  }, [token, setToken, isLoggedIn, setIsLoggedIn]);\n\n  return user;\n}\n","import fetch from \"./fetch\";\n\nexport function getUser(token) {\n  return fetch(\"/user\", { headers: { Authorization: token } });\n}\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { GoSearch } from \"react-icons/go\";\nimport { Dropdown, DropdownMenu, DropdownToggle, DropdownItem } from \"reactstrap\";\n\nimport useUser from \"../hooks/useUser\";\nimport useAuth from \"../hooks/useAuth\";\n\nimport \"./styles/Header.scss\";\n\nfunction Header(props) {\n  const { isLoggedIn } = useAuth();\n  const user = useUser();\n\n  return (\n    <div className=\"header\">\n      <Link to=\"/\" className=\"saloon\">\n        Saloon\n      </Link>\n      <Search />\n      {isLoggedIn && (\n        <Link to=\"/post\" className=\"login-account\">\n          Post\n        </Link>\n      )}\n      {isLoggedIn ? (\n        <UserDropdown name={user ? user.first_name : undefined} redirect={props.history.push} />\n      ) : (\n        <Link to=\"/login\" className=\"login-account\">\n          Login\n        </Link>\n      )}\n    </div>\n  );\n}\n\nfunction Search(props) {\n  return (\n    <div className=\"search-wrapper\">\n      <input placeholder=\"Search...\" />\n      <div>\n        <div className=\"body\">\n          <GoSearch size={20} className=\"icon\" color=\"white\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction UserDropdown(props) {\n  const [open, setOpen] = useState(false);\n  const { setIsLoggedIn, setToken } = useAuth();\n\n  const toggle = () => setOpen(!open);\n\n  const signOut = () => {\n    setToken(null);\n    setIsLoggedIn(false);\n    props.redirect(\"/\");\n  };\n\n  const DropdownLink = ({ to, ...other }) => <DropdownItem onClick={() => props.redirect(to)} {...other} />;\n\n  return (\n    <Dropdown isOpen={open} toggle={toggle} nav>\n      <DropdownToggle caret className=\"login-account\">\n        Hey, {props.name}\n      </DropdownToggle>\n      <DropdownMenu right>\n        <DropdownLink to=\"/user\">Profile</DropdownLink>\n        <DropdownLink to=\"/saved-conversations\">Saved Conversations</DropdownLink>\n        <DropdownLink to=\"/history\">History</DropdownLink>\n        <DropdownItem divider />\n        <DropdownLink to=\"/settings\">Settings</DropdownLink>\n        <DropdownItem divider />\n        <DropdownItem onClick={signOut}>Log Out</DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport \"./styles/Navigation.scss\";\n\nfunction Navigation() {\n  return (\n    <div className=\"navigation\">\n      <div className=\"links\">\n        <NavLink to=\"/home\">Home</NavLink>\n        {/* <NavLink to=\"/popular\">Popular</NavLink>\n        <NavLink to=\"/tags\">Tags</NavLink> */}\n      </div>\n    </div>\n  );\n}\n\nconst NavLink = withRouter(props => {\n  const isSelected = () => props.location.pathname.includes(props.to);\n\n  return (\n    <Link to={props.to} className={[isSelected() ? \"selected\" : \"\", \"nav-item\"].join(\" \")}>\n      {props.children}\n    </Link>\n  );\n});\n\nexport default Navigation;\n","/**\n * Taken from github:charlax/react-persist#patch-1\n */\n\nimport React from 'react';\nimport debounce from 'lodash.debounce';\nimport isEqual from 'lodash.isequal';\n\nexport default class Persist extends React.Component {\n  static defaultProps = {\n    debounce: 300,\n  };\n\n  persist = debounce((data) => {\n    window.localStorage.setItem(this.props.name, JSON.stringify(data));\n  }, this.props.debounce);\n\n  componentDidUpdate({ data }) {\n    if (!isEqual(data, this.props.data)) {\n      this.persist(this.props.data);\n    }\n  }\n\n  componentDidMount() {\n    const data = window.localStorage.getItem(this.props.name);\n    if (data && data !== null) {\n      this.props.onMount(JSON.parse(data));\n    }\n  }\n\n  render() {\n    return null;\n  }\n}","import React from \"react\";\nimport Interweave from \"interweave\";\nimport { UrlMatcher } from \"interweave-autolink\";\n\nexport default function ConfiguredInterweave(props) {\n  return <Interweave matchers={[new UrlMatcher(\"url\")]} {...props} />;\n}\n","import * as randCol from \"randomcolor\";\n\n/**\n *\n * @param {string} username to be used as seed\n */\nexport function randomColor(username) {\n  return randCol({ seed: username });\n}\n","import React from \"react\";\nimport Avatar from \"react-avatar\";\nimport { withRouter } from \"react-router-dom\";\n\nimport ConfiguredInterweave from \"../components/ConfiguredInterweave\";\n\nimport { randomColor } from \"../_helpers\";\n\nimport \"./styles/Feed.scss\";\n\nfunction Feed(props) {\n  const { items } = props;\n\n  var convo_ids = [];\n\n  return (\n    <div className=\"feed\">\n      {(items || []).map(item => {\n        if (convo_ids.includes(item.convo_id)) return false;\n        else {\n          convo_ids.push(item.convo_id);\n          return (\n            <FeedItem\n              {...item}\n              key={`Feed/${item.convo_id}`}\n              navigate={x => props.history.push(x)}\n              description={item.post}\n            />\n          );\n        }\n      })}\n    </div>\n  );\n}\n\nfunction FeedItem(props) {\n  return (\n    <>\n      <div className=\"item\" onClick={() => props.navigate(`/conversation/${props.convo_id}`)}>\n        <div className=\"title\">{props.title}</div>\n        <div className=\"inner\">\n          <Metadata {...props} />\n          <div className=\"body\">\n            <ConfiguredInterweave content={props.description} />\n          </div>\n        </div>\n      </div>\n      <div className=\"break\" />\n    </>\n  );\n}\n\nfunction Metadata(props) {\n  const format = list => {\n    if (list.length === 1) return list[0];\n    else if (list.length === 2) return `${list[0]} and ${list[1]}`;\n    else if (list.length === 3) return `${list[0]}, ${list[1]} and ${list[2]}`;\n    else if (list.length === 4) return `${list[0]}, ${list[1]}, ${list[2]} and ${list[3]}`;\n  };\n\n  return (\n    <div className=\"meta\">\n      <PeopleInvolved people={props.contributors} description={format(props.contributors)} />\n      <div className=\"creator\">{props.creator}</div>\n      <div className=\"convo-data\">\n        <div className=\"left\">\n          <div>edited {props.age}</div>\n          <div>viewed {props.views} times</div>\n        </div>\n        <div className=\"right\">\n          <div>{props.votes} votes</div>\n          <div>{props.comments} comments</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction PeopleInvolved(props) {\n\n  return (\n    <div className=\"discussed-by\">\n      <Avatar name={props.people[0]} color={randomColor(props.people[0])} round size={42} />\n      {props.people.length > 1 && (\n        <Avatar name={props.people[1]} color={randomColor(props.people[1])} round size={42} />\n      )}\n      <span className=\"text\">\n        <div>Discussion by {props.description}</div>\n      </span>\n    </div>\n  );\n}\n\nexport default withRouter(Feed);\n","import { useState, useEffect } from \"react\";\n\nimport * as conversationService from \"../services/conversation.service\";\n\nimport useAuth from \"./useAuth\";\n\nexport default function useFeed() {\n  const { token, setToken, isLoggedIn, setIsLoggedIn, didPersistLoad } = useAuth();\n  const [feed, setFeed] = useState(null);\n\n  useEffect(() => {\n    if (feed || !didPersistLoad) return;\n\n    const logout = () => {\n      setToken(null);\n      setIsLoggedIn(false);\n      setFeed(null);\n    };\n\n    conversationService\n      .getFeed(token)\n      .then(u => setFeed(u.convos))\n      .catch(_ => logout());\n  }, [token, feed, setToken, isLoggedIn, setIsLoggedIn, didPersistLoad]);\n\n  return feed;\n}\n","import fetch from \"./fetch\";\n\nexport function getFeed(token) {\n  return fetch(\"/feed\", { method: \"GET\", headers: token ? { Authorization: token } : undefined });\n}\n\nexport function getConversation(id, { token } = {}) {\n  return fetch(`/convo/${id}`, { method: \"GET\", headers: token ? { Authorization: token } : undefined });\n}\n\nexport function postConversation(token, { title, body }) {\n  return fetch(\"/convo\", { method: \"POST\", headers: { Authorization: token }, body: { title, post: body } });\n}\n\nexport function putVote(id, { token, vote }) {\n  return fetch(`/convo/${id}/vote/${vote}`, { method: \"PUT\", headers: token ? { Authorization: token } : undefined });\n}\n\nexport function postConversationPost(token, { convo_id, post }) {\n  return fetch(\"/post\", { method: \"POST\", headers: { Authorization: token }, body: { convo_id, post } });\n}\n","import React from \"react\";\n\nimport Feed from \"../components/Feed\";\n\nimport useFeed from \"../hooks/useFeed\";\n\nfunction Home() {\n  const feed = useFeed()\n\n  return (\n    <div className=\"home\">\n      <Feed items={feed} />\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Formik, Form, Field as FormikField, ErrorMessage } from \"formik\";\n\nimport \"./styles/Form.scss\";\n\nfunction Field(props) {\n  return (\n    <>\n      <div className=\"field-title\">{props.placeholder}</div>\n      <FormikField {...props} />\n      <ErrorMessage name={props.name} render={msg => <div className=\"error\">{msg.replace(\"_\", \" \")}</div>} />\n    </>\n  );\n}\n\nexport { Formik, Form, Field };\n","import React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Formik, Form, Field } from \"../components/Form\";\n\nimport * as authenticationService from \"../services/authentication.service\";\n\nimport useAuth from \"../hooks/useAuth\";\n\nfunction Login(props) {\n  const { isLoggedIn, setIsLoggedIn, setToken } = useAuth();\n\n  return isLoggedIn ? (\n    <Redirect to={props.location.state ? props.location.state.from.pathname : \"/\"} />\n  ) : (\n    <div className=\"form\">\n      <h1>Login</h1>\n      <Formik\n        initialValues={{ email: \"\", password: \"\" }}\n        onSubmit={({ email, password }, actions) => {\n          authenticationService\n            .login(email, password)\n            .then(data => {\n              setToken(data.token);\n              setIsLoggedIn(true);\n            })\n            .catch(e => {\n              actions.setErrors({ password: \"incorrect password\" });\n              actions.setSubmitting(false);\n            });\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <Field type=\"text\" name=\"email\" placeholder=\"email\" />\n            <Field type=\"password\" name=\"password\" placeholder=\"password\" />\n            <button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </button>\n            <div className=\"switch-here\">\n              Don't have an account? Join <Link to=\"/register\">here</Link>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default Login;\n","import fetch from \"./fetch\";\n\nexport function login(email, password) {\n  return fetch(\"/user/login\", { method: \"POST\", body: { email, password } });\n}\n\nexport function register({ username, password, first_name, last_name, email }) {\n  return fetch(\"/user/signup\", { method: \"POST\", body: { username, first_name, last_name, password, email } });\n}\n","import React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Formik, Form, Field } from \"../components/Form\";\nimport * as Yup from \"yup\";\n\nimport * as authenticationService from \"../services/authentication.service\";\n\nimport useAuth from \"../hooks/useAuth\";\n\nfunction Register() {\n  const { setToken, setIsLoggedIn, isLoggedIn } = useAuth();\n\n  return isLoggedIn ? (\n    <Redirect to=\"/home\" />\n  ) : (\n    <div className=\"form\">\n      <h1>Register</h1>\n      <Formik\n        initialValues={{ username: \"\", password: \"\", first_name: \"\", last_name: \"\", email: \"\" }}\n        onSubmit={(vals, actions) => {\n          authenticationService\n            .register(vals)\n            .then(data => {\n              setToken(data.token);\n              setIsLoggedIn(true);\n            })\n            .catch(_ => actions.setFieldError(\"email\", \"something went wrong\"));\n        }}\n        validationSchema={Yup.object().shape({\n          first_name: Yup.string().required(),\n          last_name: Yup.string().required(),\n          username: Yup.string().required(),\n          password: Yup.string().required()\n        })}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <Field type=\"email\" name=\"email\" placeholder=\"email\" />\n            <Field type=\"text\" name=\"first_name\" placeholder=\"first name\" />\n            <Field type=\"text\" name=\"last_name\" placeholder=\"last name\" />\n            <Field type=\"text\" name=\"username\" placeholder=\"username\" />\n            <Field type=\"password\" name=\"password\" placeholder=\"password\" />\n            <button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </button>\n            <div className=\"switch-here\">\n              Already have an account? Login <Link to=\"/login\">here</Link>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default Register;\n","import React from \"react\";\nimport ReactQuill from \"react-quill\";\n\nexport default function ConfiguredQuill(props) {\n  const { value, setValue, ...otherProps } = props;\n\n  return (\n    <ReactQuill\n      theme=\"snow\"\n      modules={{ toolbar: [[\"bold\", \"italic\", \"underline\", \"strike\"], [\"link\"]] }}\n      formats={[\"bold\", \"italic\", \"underline\", \"strike\", \"link\"]}\n      value={value || \"\"}\n      onChange={x => setValue(x)}\n      {...otherProps}\n    />\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nimport useAuth from \"./useAuth\";\n\nimport * as conversationService from \"../services/conversation.service\";\n\nexport default function useConversation(id, { reload, token }) {\n  const [conversation, setConvo] = useState({});\n  const { didPersistLoad } = useAuth();\n\n  useEffect(() => {\n    if (!didPersistLoad) return;\n\n    conversationService\n      .getConversation(id, { token })\n      .then(u => setConvo(u))\n      .catch(_ => {});\n  }, [id, reload, token, didPersistLoad]);\n\n  return conversation;\n}\n","import React, { useState } from \"react\";\nimport { GoChevronLeft } from \"react-icons/go\";\nimport { FiThumbsUp, FiThumbsDown } from \"react-icons/fi\";\n\nimport ConfiguredQuill from \"../components/ConfiguredQuill\";\nimport ConfiguredInterweave from \"../components/ConfiguredInterweave\";\n\nimport useConversation from \"../hooks/useConversation\";\nimport useAuth from \"../hooks/useAuth\";\n\nimport * as conversationService from \"../services/conversation.service\";\n\nimport { randomColor } from \"../_helpers\";\n\nimport \"./styles/Conversation.scss\";\n\nfunction Conversation(props) {\n  const id = props.match.params.id;\n\n  const [reload, setReload] = useState(1);\n  const toggleReload = () => setReload(-reload);\n\n  const { token, isLoggedIn } = useAuth();\n  const [post, setPost] = useState(\"\");\n  const data = useConversation(id, { reload, token });\n\n  const postAction = () => {\n    conversationService\n      .postConversationPost(token, { convo_id: id, post })\n      .then(() => {\n        toggleReload();\n        setPost(\"\");\n      })\n      .catch(_ => {}); // Handle erroring later\n  };\n\n  /**\n   *\n   * @param {'1' | '0' | '-1'} vote\n   */\n  const updateVote = vote => {\n    conversationService\n      .putVote(id, { token, vote })\n      .then(() => toggleReload())\n      .catch(_ => {}); // Handle erroring later\n  };\n\n  return (\n    <div className=\"conversation\">\n      <Discussion\n        posts={data.posts}\n        submit={postAction}\n        body={post}\n        setBody={setPost}\n        isLoggedIn={isLoggedIn}\n        isContributor={data.isContributor}\n      />\n      <Title\n        title={data.title}\n        views={data.views}\n        votes={data.votes}\n        userVote={data.vote}\n        updateVote={updateVote}\n        isLoggedIn={isLoggedIn}\n        isContributor={data.isContributor}\n        navigate={props.history.push}\n        id={id}\n      />\n      <Comments comments={data.comments || []} />\n    </div>\n  );\n}\n\nfunction Title(props) {\n  const { title, views, votes, userVote, updateVote, isLoggedIn, isContributor, navigate, id } = props;\n\n  const handleVote = nVote => {\n    if (nVote === userVote) updateVote(0);\n    else updateVote(nVote);\n  };\n\n  return (\n    <div className=\"d-title\">\n      <TitleVote votes={votes} userVote={userVote} setVote={handleVote} />\n      <div>\n        <div className=\"text\">{title}</div>\n        {(!isLoggedIn || !isContributor) && (\n          <div\n            className=\"join\"\n            onClick={() =>\n              isContributor\n                ? false // Handle contributor request\n                : navigate({ pathname: \"/login\", state: { from: { pathname: `/conversation/${id}` } } })\n            }\n          >\n            Join Conversation\n          </div>\n        )}\n      </div>\n      <div className=\"views\">{views} views</div>\n    </div>\n  );\n}\n\nfunction TitleVote(props) {\n  const { votes = \"0\", userVote, setVote } = props;\n\n  return (\n    <div className=\"vote\">\n      <FiThumbsUp className={`thumb ${userVote === 1 ? \"upvoted\" : \"\"}`} onClick={() => setVote(1)} />\n      <span className=\"amount\">{votes}</span>\n      <FiThumbsDown className={`thumb ${userVote === -1 ? \"upvoted\" : \"\"}`} onClick={() => setVote(-1)} />\n    </div>\n  );\n}\n\nfunction Discussion(props) {\n  const { posts, body, setBody, submit, isLoggedIn, isContributor } = props;\n\n  return (\n    <div className=\"discussion\">\n      <div className=\"inner\">\n        {posts &&\n          posts.map((item, index) => (\n            <DiscussionItem {...item} key={`${item.contributor}/${item.time_of_post}/${index}`} />\n          ))}\n      </div>\n      {isLoggedIn && isContributor && (\n        <div className=\"editor-wrapper\">\n          <ConfiguredQuill value={body} setValue={setBody} />\n          <div className=\"post-button\" onClick={submit}>\n            Submit\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction DiscussionItem(props) {\n  const { contributor, post } = props;\n\n  return (\n    <>\n      <div className=\"item\">\n        <span style={{ color: randomColor(contributor) }}>{contributor}: </span>\n        <ConfiguredInterweave content={post} />\n      </div>\n      <div className=\"break\" />\n    </>\n  );\n}\n\nfunction Comments(props) {\n  const [showing, setShowing] = useState(false);\n  const toggle = () => setShowing(!showing);\n\n  return (\n    <div className={`comments ${showing ? \"\" : \"minimized\"}`}>\n      <div className=\"comment-header\">\n        <div className={`button ${showing ? \"rotate\" : \"\"}`} onClick={toggle}>\n          <GoChevronLeft />\n        </div>\n        <div className={`title ${showing ? \"\" : \"fade\"}`}>Comments</div>\n      </div>\n      {props.comments.map((comment, index) => (\n        <Comment key={`${comment.contributor}/${comment.time_of_comment}/${index}`} _showing={showing} {...comment} />\n      ))}\n      <div className={`add ${showing ? \"\" : \"fade\"}`}>\n        <textarea />\n        <button type=\"submit\">Submit</button>\n      </div>\n    </div>\n  );\n}\n\nfunction Comment(props) {\n  const { time_of_comment, contributor, body, _showing, likes } = props;\n  const [upvoted, setUpvoted] = useState(false);\n\n  return (\n    <div className={`comment ${_showing ? \"\" : \"fade\"}`}>\n      <div className=\"meta\">\n        <div className=\"contributor\" style={{ color: randomColor(contributor) }}>\n          {contributor}\n        </div>\n        <div className={`likes ${upvoted ? \"upvoted\" : \"\"}`} onClick={() => setUpvoted(!upvoted)}>\n          {upvoted ? likes + 1 : likes} <FiThumbsUp style={{ fontSize: \"12px\" }} />\n        </div>\n        <div className=\"time\">{time_of_comment}</div>\n      </div>\n      <div className=\"body\">{body}</div>\n    </div>\n  );\n}\n\nexport default Conversation;\n","import React, { useState } from \"react\";\nimport Avatar from \"react-avatar\";\nimport { Spinner } from \"reactstrap\";\nimport { FiArrowRightCircle } from \"react-icons/fi\";\n\nimport ConfiguredQuill from \"../components/ConfiguredQuill\";\n\nimport * as conversationService from \"../services/conversation.service\";\nimport useAuth from \"../hooks/useAuth\";\nimport useUser from \"../hooks/useUser\";\n\nimport { randomColor } from \"../_helpers\";\n\nimport \"./styles/Post.scss\";\nimport \"react-quill/dist/quill.snow.css\";\n\nexport default function Post(props) {\n  const { token } = useAuth();\n  const user = useUser();\n\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n\n  const [invited, setInvited] = useState([]);\n  const addInvited = newUser =>\n    !invited.includes(newUser) && newUser.toLowerCase() !== user.username.toLowerCase()\n      ? setInvited([...invited, newUser])\n      : null;\n\n  const [submitting, setSubmitting] = useState(false);\n\n  function uploadPost() {\n    setSubmitting(true);\n\n    conversationService\n      .postConversation(token, { title, body })\n      .then(data => {\n        setSubmitting(false);\n        props.history.push(`/conversation/${data.convo_id}`);\n      })\n      .catch(_ => {\n        setSubmitting(false);\n      });\n  }\n\n  return (\n    <div className=\"post\">\n      <Editor title={title} setTitle={setTitle} body={body} setBody={setBody} />\n      <div className=\"collaborators\">\n        <div>Collaborators</div>\n        <CollaboratorSection color=\"gray\" invited={invited}>\n          Invited\n        </CollaboratorSection>\n        <Invite inviteUser={addInvited} />\n        <div className=\"post-button\" onClick={uploadPost}>\n          {!submitting ? (\n            <div className=\"text\">Post</div>\n          ) : (\n            <Spinner\n              css={`\n                width: 50px;\n                height: 50px;\n                flex: 1;\n              `}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Editor(props) {\n  const { title, setTitle, body, setBody } = props;\n\n  return (\n    <div className=\"editor\">\n      <input className=\"post-title\" placeholder=\"Title\" value={title} onChange={e => setTitle(e.currentTarget.value)} />\n      <ConfiguredQuill value={body} onChange={val => setBody(val)} />\n    </div>\n  );\n}\n\nfunction CollaboratorSection(props) {\n  const { color, invited, children } = props;\n\n  return (\n    <div className=\"section\">\n      <div className=\"title\">{children}</div>\n      <div className=\"users\">\n        {invited.map(invite => (\n          <Collaborator key={`invite/${invite}`} color={color}>\n            {invite}\n          </Collaborator>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction Collaborator(props) {\n  const { color = undefined } = props;\n  return (\n    <div className=\"user\">\n      <Avatar name={props.children} src={props.image || null} color={randomColor(props.children)} round size={25} />\n      <span className=\"name\" style={{ color }}>\n        {props.children}\n      </span>\n    </div>\n  );\n}\n\nfunction Invite(props) {\n  const [user, setUser] = useState(\"\");\n\n  let inputRef;\n  const inviteUser = () => {\n    props.inviteUser(user);\n    setUser(\"\");\n    inputRef.focus();\n  };\n\n  return (\n    <div className=\"invite\">\n      <div className=\"title\">Invite Someone</div>\n      <div className=\"field\">\n        <input\n          className=\"clear-input\"\n          placeholder=\"username\"\n          autoComplete=\"off\"\n          value={user}\n          onChange={e => setUser(e.currentTarget.value)}\n          onKeyDown={e => (e.key === \"Enter\" ? inviteUser() : null)}\n          ref={input => (inputRef = input)}\n        />\n        <FiArrowRightCircle className=\"submit\" onClick={inviteUser} />\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Navigation from \"./components/Navigation\";\nimport Persist from \"./components/Persist\";\n\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport Conversation from \"./pages/Conversation\";\nimport Post from \"./pages/Post\";\n\nimport \"./App.scss\";\n\n/**\n * @type {React.Context<{ isLoggedIn: boolean, setIsLoggedIn: (val: boolean)=> void, token: string, didPersistLoad: boolean setToken: (val: string) => void }>}\n */\nconst AuthContext = React.createContext();\n\nfunction App() {\n  const [didPersistLoad, setPersistLoad] = useState(false);\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [token, setToken] = useState(null);\n\n  return (\n    <AuthContext.Provider value={{ isLoggedIn, setIsLoggedIn, token, setToken, didPersistLoad }}>\n      <Persist\n        data={{ token, isLoggedIn }}\n        debounce={500}\n        onMount={data => {\n          setPersistLoad(true);\n          setIsLoggedIn(data.isLoggedIn);\n          setToken(data.token);\n        }}\n      />\n      <Router>\n        <div>\n          <Header />\n          <Navigation />\n          <div className=\"content\">\n            <Switch>\n              <Redirect exact from=\"/\" to=\"/home\" />\n              <Route exact path=\"/home\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/register\" component={Register} />\n              <Route exact path=\"/conversation/:id\" component={Conversation} />\n              <SecuredRoute exact path=\"/post\" component={Post} authenticated={isLoggedIn} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nfunction SecuredRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        authenticated === true ? (\n          <Component {...props} {...rest} />\n        ) : (\n          <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\n        )\n      }\n    />\n  );\n}\n\nexport default App;\nexport { AuthContext };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}