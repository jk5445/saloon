{"version":3,"sources":["services/fetch.js","hooks/useUser.js","services/user.service.js","components/Header.js","components/Navigation.js","components/Persist.js","components/ConfiguredInterweave.js","_helpers/randomColor.js","components/Feed.js","hooks/useFeed.js","services/conversation.service.js","pages/Home.js","components/Form.js","pages/Login.js","services/authentication.service.js","pages/Register.js","components/ConfiguredQuill.js","hooks/useConversation.js","pages/Conversation.js","pages/Post.js","hooks/useAuth.js","App.js","serviceWorker.js","index.js"],"names":["isDev","process","newFetch","url","headers","body","options","fullUrl","path","join","fetch","JSON","stringify","then","resp","ok","json","useUser","useContext","AuthContext","token","setToken","isLoggedIn","setIsLoggedIn","useState","user","setUser","useEffect","Authorization","userService","u","catch","_","Search","props","className","placeholder","size","color","UserDropdown","open","setOpen","DropdownLink","to","other","DropdownItem","onClick","redirect","Dropdown","isOpen","toggle","nav","DropdownToggle","caret","name","DropdownMenu","right","divider","withRouter","first_name","undefined","history","push","NavLink","location","pathname","includes","children","Navigation","Persist","persist","debounce","data","window","localStorage","setItem","isEqual","this","getItem","onMount","parse","React","Component","defaultProps","ConfiguredInterweave","matchers","UrlMatcher","randomColor","username","randCol","seed","FeedItem","navigate","convo_id","title","Metadata","content","description","list","PeopleInvolved","people","contributors","length","creator","age","views","votes","comments","round","items","convo_ids","map","item","key","x","post","useFeed","feed","setFeed","method","conversationService","convos","Home","Field","render","msg","replace","Login","state","from","initialValues","email","password","onSubmit","actions","authenticationService","setErrors","setSubmitting","isSubmitting","type","disabled","Register","last_name","vals","setFieldError","validationSchema","Yup","shape","required","ConfiguredQuill","value","setValue","otherProps","theme","modules","toolbar","formats","onChange","useConversation","id","reload","conversation","setConvo","Title","likes","isContributor","vote","setVote","TitleVote","nVote","Discussion","posts","setBody","submit","index","DiscussionItem","contributor","time_of_post","style","Comments","showing","setShowing","comment","Comment","time_of_comment","_showing","upvoted","setUpvoted","fontSize","Conversation","match","params","setReload","setPost","Post","useAuth","setTitle","submitting","Editor","CollaboratorSection","Invite","Spinner","css","e","currentTarget","val","Collaborator","src","image","autoComplete","createContext","SecuredRoute","component","authenticated","rest","App","Provider","exact","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2ff56e56.chunk.js","sourcesContent":["import path from \"path\";\n\nconst isDev = () => !process.env.NODE_ENV || process.env.NODE_ENV === \"development\";\n\n/**\n *\n * @param {string} url\n * @param {import(\"http\").RequestOptions} options\n */\nexport default function newFetch(url, { headers, body, ...options }) {\n  const fullUrl = path.join(isDev() ? \"https://agile-tor-73556.herokuapp.com/api/v1\" : \"/api/v1\", url);\n\n  return fetch(fullUrl, {\n    headers: { \"Content-Type\": \"application/json\", ...headers },\n    ...options,\n    body: JSON.stringify(body)\n  }).then(resp => {\n    if (resp.ok) return resp.json();\n    throw resp;\n  });\n}\n","import { useState, useContext, useEffect } from \"react\";\n\nimport * as userService from \"../services/user.service\";\nimport { AuthContext } from \"../App\";\n\nexport default function useUser() {\n  const { token, setToken, isLoggedIn, setIsLoggedIn } = useContext(AuthContext);\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    if (!token || !isLoggedIn) return;\n\n    const logout = () => {\n      setToken(null);\n      setIsLoggedIn(false);\n      setUser(null);\n    };\n\n    userService\n      .getUser(token)\n      .then(u => setUser(u))\n      .catch(_ => logout());\n  }, [token, setToken, isLoggedIn, setIsLoggedIn]);\n\n  return user;\n}\n","import fetch from \"./fetch\";\n\nexport function getUser(token) {\n  return fetch(\"/user\", { headers: { Authorization: token } });\n}\n","import React, { useState, useContext } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { GoSearch } from \"react-icons/go\";\nimport { Dropdown, DropdownMenu, DropdownToggle, DropdownItem } from \"reactstrap\";\n\nimport useUser from \"../hooks/useUser\";\nimport { AuthContext } from \"../App\";\n\nimport \"./styles/Header.scss\";\n\nfunction Header(props) {\n  const { isLoggedIn } = useContext(AuthContext);\n  const user = useUser();\n\n  return (\n    <div className=\"header\">\n      <Link to=\"/\" className=\"saloon\">\n        Saloon\n      </Link>\n      <Search />\n      {isLoggedIn && (\n        <Link to=\"/post\" className=\"login-account\">\n          Post\n        </Link>\n      )}\n      {isLoggedIn ? (\n        <UserDropdown name={user ? user.first_name : undefined} redirect={props.history.push} />\n      ) : (\n        <Link to=\"/login\" className=\"login-account\">\n          Login\n        </Link>\n      )}\n    </div>\n  );\n}\n\nfunction Search(props) {\n  return (\n    <div className=\"search-wrapper\">\n      <input placeholder=\"Search...\" />\n      <div>\n        <div className=\"body\">\n          <GoSearch size={20} className=\"icon\" color=\"white\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction UserDropdown(props) {\n  const [open, setOpen] = useState(false);\n  const { setIsLoggedIn, setToken } = useContext(AuthContext);\n\n  const toggle = () => setOpen(!open);\n\n  const signOut = () => {\n    setToken(null);\n    setIsLoggedIn(false);\n    props.redirect(\"/\");\n  };\n\n  const DropdownLink = ({ to, ...other }) => <DropdownItem onClick={() => props.redirect(to)} {...other} />;\n\n  return (\n    <Dropdown isOpen={open} toggle={toggle} nav>\n      <DropdownToggle caret className=\"login-account\">\n        Hey, {props.name}\n      </DropdownToggle>\n      <DropdownMenu right>\n        <DropdownLink to=\"/user\">Profile</DropdownLink>\n        <DropdownLink to=\"/saved-conversations\">Saved Conversations</DropdownLink>\n        <DropdownLink to=\"/history\">History</DropdownLink>\n        <DropdownItem divider />\n        <DropdownLink to=\"/settings\">Settings</DropdownLink>\n        <DropdownItem divider />\n        <DropdownItem onClick={signOut}>Log Out</DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport \"./styles/Navigation.scss\";\n\nfunction Navigation() {\n  return (\n    <div className=\"navigation\">\n      <div className=\"links\">\n        <NavLink to=\"/home\">Home</NavLink>\n        {/* <NavLink to=\"/popular\">Popular</NavLink>\n        <NavLink to=\"/tags\">Tags</NavLink> */}\n      </div>\n    </div>\n  );\n}\n\nconst NavLink = withRouter(props => {\n  const isSelected = () => props.location.pathname.includes(props.to);\n\n  return (\n    <Link to={props.to} className={[isSelected() ? \"selected\" : \"\", \"nav-item\"].join(\" \")}>\n      {props.children}\n    </Link>\n  );\n});\n\nexport default Navigation;\n","/**\n * Taken from github:charlax/react-persist#patch-1\n */\n\nimport React from 'react';\nimport debounce from 'lodash.debounce';\nimport isEqual from 'lodash.isequal';\n\nexport default class Persist extends React.Component {\n  static defaultProps = {\n    debounce: 300,\n  };\n\n  persist = debounce((data) => {\n    window.localStorage.setItem(this.props.name, JSON.stringify(data));\n  }, this.props.debounce);\n\n  componentDidUpdate({ data }) {\n    if (!isEqual(data, this.props.data)) {\n      this.persist(this.props.data);\n    }\n  }\n\n  componentDidMount() {\n    const data = window.localStorage.getItem(this.props.name);\n    if (data && data !== null) {\n      this.props.onMount(JSON.parse(data));\n    }\n  }\n\n  render() {\n    return null;\n  }\n}","import React from \"react\";\nimport Interweave from \"interweave\";\nimport { UrlMatcher } from \"interweave-autolink\";\n\nexport default function ConfiguredInterweave(props) {\n  return <Interweave matchers={[new UrlMatcher(\"url\")]} {...props} />;\n}\n","import * as randCol from \"randomcolor\";\n\n/**\n *\n * @param {string} username to be used as seed\n */\nexport function randomColor(username) {\n  return randCol({ seed: username });\n}\n","import React from \"react\";\nimport Avatar from \"react-avatar\";\nimport { withRouter } from \"react-router-dom\";\n\nimport ConfiguredInterweave from \"../components/ConfiguredInterweave\";\n\nimport { randomColor } from \"../_helpers\";\n\nimport \"./styles/Feed.scss\";\n\nfunction Feed(props) {\n  const { items } = props;\n\n  var convo_ids = [];\n\n  return (\n    <div className=\"feed\">\n      {(items || []).map(item => {\n        if (convo_ids.includes(item.convo_id)) return false;\n        else {\n          convo_ids.push(item.convo_id);\n          return (\n            <FeedItem\n              {...item}\n              key={`Feed/${item.convo_id}`}\n              navigate={x => props.history.push(x)}\n              description={item.post}\n            />\n          );\n        }\n      })}\n    </div>\n  );\n}\n\nfunction FeedItem(props) {\n  return (\n    <>\n      <div className=\"item\" onClick={() => props.navigate(`/conversation/${props.convo_id}`)}>\n        <div className=\"title\">{props.title}</div>\n        <div className=\"inner\">\n          <Metadata {...props} />\n          <div className=\"body\">\n            <ConfiguredInterweave content={props.description} />\n          </div>\n        </div>\n      </div>\n      <div className=\"break\" />\n    </>\n  );\n}\n\nfunction Metadata(props) {\n  const format = list => {\n    if (list.length === 1) return list[0];\n    else if (list.length === 2) return `${list[0]} and ${list[1]}`;\n    else if (list.length === 3) return `${list[0]}, ${list[1]} and ${list[2]}`;\n    else if (list.length === 4) return `${list[0]}, ${list[1]}, ${list[2]} and ${list[3]}`;\n  };\n\n  return (\n    <div className=\"meta\">\n      <PeopleInvolved people={props.contributors} description={format(props.contributors)} />\n      <div className=\"creator\">{props.creator}</div>\n      <div className=\"convo-data\">\n        <div className=\"left\">\n          <div>edited {props.age}</div>\n          <div>viewed {props.views} times</div>\n        </div>\n        <div className=\"right\">\n          <div>{props.votes} votes</div>\n          <div>{props.comments} comments</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction PeopleInvolved(props) {\n\n  return (\n    <div className=\"discussed-by\">\n      <Avatar name={props.people[0]} color={randomColor(props.people[0])} round size={42} />\n      {props.people.length > 1 && (\n        <Avatar name={props.people[1]} color={randomColor(props.people[1])} round size={42} />\n      )}\n      <span className=\"text\">\n        <div>Discussion by {props.description}</div>\n      </span>\n    </div>\n  );\n}\n\nexport default withRouter(Feed);\n","import { useState, useContext, useEffect } from \"react\";\n\nimport * as conversationService from \"../services/conversation.service\";\nimport { AuthContext } from \"../App\";\n\nexport default function useFeed() {\n  const { token, setToken, isLoggedIn, setIsLoggedIn } = useContext(AuthContext);\n  const [feed, setFeed] = useState(null);\n\n  useEffect(() => {\n    if (feed) return;\n\n    const logout = () => {\n      setToken(null);\n      setIsLoggedIn(false);\n      setFeed(null);\n    };\n\n    conversationService\n      .getFeed(token)\n      .then(u => setFeed(u.convos))\n      .catch(_ => logout());\n  }, [token, feed, setToken, isLoggedIn, setIsLoggedIn]);\n\n  return feed;\n}\n","import fetch from \"./fetch\";\n\nexport function getFeed(token) {\n  return fetch(\"/feed\", { method: \"GET\", headers: token ? { Authorization: token } : undefined });\n}\n\nexport function getConversation(id, { token } = {}) {\n  return fetch(`/convo/${id}`, { method: \"GET\", headers: token ? { Authorization: token } : undefined });\n}\n\nexport function postConversation(token, { title, body }) {\n  return fetch(\"/convo\", { method: \"POST\", headers: { Authorization: token }, body: { title, post: body } });\n}\n\nexport function postConversationPost(token, { convo_id, post }) {\n  return fetch(\"/post\", { method: \"POST\", headers: { Authorization: token }, body: { convo_id, post } });\n}\n","import React from \"react\";\n\nimport Feed from \"../components/Feed\";\n\nimport useFeed from \"../hooks/useFeed\";\n\nfunction Home() {\n  const feed = useFeed()\n\n  return (\n    <div className=\"home\">\n      <Feed items={feed} />\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Formik, Form, Field as FormikField, ErrorMessage } from \"formik\";\n\nimport \"./styles/Form.scss\";\n\nfunction Field(props) {\n  return (\n    <>\n      <div className=\"field-title\">{props.placeholder}</div>\n      <FormikField {...props} />\n      <ErrorMessage name={props.name} render={msg => <div className=\"error\">{msg.replace(\"_\", \" \")}</div>} />\n    </>\n  );\n}\n\nexport { Formik, Form, Field };\n","import React, { useContext } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Formik, Form, Field } from \"../components/Form\";\n\nimport * as authenticationService from \"../services/authentication.service\";\nimport { AuthContext } from \"../App\";\n\nfunction Login(props) {\n  const { isLoggedIn, setIsLoggedIn, setToken } = useContext(AuthContext);\n\n  return isLoggedIn ? (\n    <Redirect to={props.location.state ? props.location.state.from.pathname : \"/\"} />\n  ) : (\n    <div className=\"form\">\n      <h1>Login</h1>\n      <Formik\n        initialValues={{ email: \"\", password: \"\" }}\n        onSubmit={({ email, password }, actions) => {\n          authenticationService\n            .login(email, password)\n            .then(data => {\n              setToken(data.token);\n              setIsLoggedIn(true);\n            })\n            .catch(_ => {\n              actions.setErrors({ password: \"incorrect password\" });\n              actions.setSubmitting(false);\n            });\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <Field type=\"text\" name=\"email\" placeholder=\"email\" />\n            <Field type=\"password\" name=\"password\" placeholder=\"password\" />\n            <button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </button>\n            <div className=\"switch-here\">\n              Don't have an account? Join <Link to=\"/register\">here</Link>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default Login;\n","import fetch from \"./fetch\";\n\nexport function login(email, password) {\n  return fetch(\"/user/login\", { method: \"POST\", body: { email, password } });\n}\n\nexport function register({ username, password, first_name, last_name, email }) {\n  return fetch(\"/user/signup\", { method: \"POST\", body: { username, first_name, last_name, password, email } });\n}\n","import React, { useContext } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Formik, Form, Field } from \"../components/Form\";\nimport * as Yup from \"yup\";\n\nimport * as authenticationService from \"../services/authentication.service\";\nimport { AuthContext } from \"../App\";\n\nfunction Register() {\n  const { setToken, setIsLoggedIn, isLoggedIn } = useContext(AuthContext);\n\n  return isLoggedIn ? (\n    <Redirect to=\"/home\" />\n  ) : (\n    <div className=\"form\">\n      <h1>Register</h1>\n      <Formik\n        initialValues={{ username: \"\", password: \"\", first_name: \"\", last_name: \"\", email: \"\" }}\n        onSubmit={(vals, actions) => {\n          authenticationService\n            .register(vals)\n            .then(data => {\n              setToken(data.token);\n              setIsLoggedIn(true);\n            })\n            .catch(_ => actions.setFieldError(\"email\", \"something went wrong\"));\n        }}\n        validationSchema={Yup.object().shape({\n          first_name: Yup.string().required(),\n          last_name: Yup.string().required(),\n          username: Yup.string().required(),\n          password: Yup.string().required()\n        })}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <Field type=\"email\" name=\"email\" placeholder=\"email\" />\n            <Field type=\"text\" name=\"first_name\" placeholder=\"first name\" />\n            <Field type=\"text\" name=\"last_name\" placeholder=\"last name\" />\n            <Field type=\"text\" name=\"username\" placeholder=\"username\" />\n            <Field type=\"password\" name=\"password\" placeholder=\"password\" />\n            <button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </button>\n            <div className=\"switch-here\">\n              Already have an account? Login <Link to=\"/login\">here</Link>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default Register;\n","import React from \"react\";\nimport ReactQuill from \"react-quill\";\n\nexport default function ConfiguredQuill(props) {\n  const { value, setValue, ...otherProps } = props;\n\n  return (\n    <ReactQuill\n      theme=\"snow\"\n      modules={{ toolbar: [[\"bold\", \"italic\", \"underline\", \"strike\"], [\"link\"]] }}\n      formats={[\"bold\", \"italic\", \"underline\", \"strike\", \"link\"]}\n      value={value || \"\"}\n      onChange={x => setValue(x)}\n      {...otherProps}\n    />\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nimport * as conversationService from \"../services/conversation.service\";\n\nexport default function useConversation(id, { reload, token }) {\n  const [conversation, setConvo] = useState({});\n\n  useEffect(() => {\n    conversationService\n      .getConversation(id, { token })\n      .then(u => setConvo(u))\n      .catch(_ => {});\n  }, [id, reload, token]);\n\n  return conversation;\n}\n","import React, { useState, useContext } from \"react\";\nimport { GoChevronLeft } from \"react-icons/go\";\nimport { FiThumbsUp, FiThumbsDown } from \"react-icons/fi\";\n\nimport { AuthContext } from \"../App\";\nimport ConfiguredQuill from \"../components/ConfiguredQuill\";\nimport ConfiguredInterweave from \"../components/ConfiguredInterweave\";\n\nimport useConversation from \"../hooks/useConversation\";\n\nimport * as conversationService from \"../services/conversation.service\";\n\nimport { randomColor } from \"../_helpers\";\n\nimport \"./styles/Conversation.scss\";\n\nfunction Conversation(props) {\n  const id = props.match.params.id;\n\n  const [reload, setReload] = useState(1);\n  const toggleReload = () => setReload(-reload);\n\n  const { token, isLoggedIn } = useContext(AuthContext);\n  const [post, setPost] = useState(\"\");\n  const data = useConversation(id, { reload, token });\n\n  const postAction = () => {\n    conversationService\n      .postConversationPost(token, { convo_id: id, post })\n      .then(() => {\n        toggleReload();\n        setPost(\"\");\n      })\n      .catch(_ => {}); // Handle erroring later\n  };\n\n  return (\n    <div className=\"conversation\">\n      <Discussion\n        posts={data.posts}\n        submit={postAction}\n        body={post}\n        setBody={setPost}\n        isLoggedIn={isLoggedIn}\n        isContributor={data.isContributor}\n      />\n      <Title\n        title={data.title}\n        views={data.views}\n        likes={data.votes}\n        isLoggedIn={isLoggedIn}\n        isContributor={data.isContributor}\n        navigate={props.history.push}\n        id={id}\n      />\n      <Comments comments={data.comments || []} />\n    </div>\n  );\n}\n\nfunction Title(props) {\n  const { title, views, likes, isLoggedIn, isContributor, navigate, id } = props;\n\n  const [vote, setVote] = useState(\"NONE\");\n  const handleVote = nVote => {\n    if (nVote === vote) setVote(\"NONE\");\n    else setVote(nVote);\n  };\n\n  return (\n    <div className=\"d-title\">\n      <TitleVote likes={likes} vote={vote} setVote={handleVote} />\n      <div>\n        <div className=\"text\">{title}</div>\n        {(!isLoggedIn || !isContributor) && (\n          <div\n            className=\"join\"\n            onClick={() =>\n              isContributor\n                ? false // Handle contributor request\n                : navigate({ pathname: \"/login\", state: { from: { pathname: `/conversation/${id}` } } })\n            }\n          >\n            Join Conversation\n          </div>\n        )}\n      </div>\n      <div className=\"views\">{views} views</div>\n    </div>\n  );\n}\n\nfunction TitleVote(props) {\n  const { likes = \"0\", vote, setVote } = props;\n\n  return (\n    <div className=\"vote\">\n      <FiThumbsUp className={`thumb ${vote === \"UP\" ? \"upvoted\" : \"\"}`} onClick={() => setVote(\"UP\")} />\n      <span className=\"amount\">{likes}</span>\n      <FiThumbsDown className={`thumb ${vote === \"DOWN\" ? \"upvoted\" : \"\"}`} onClick={() => setVote(\"DOWN\")} />\n    </div>\n  );\n}\n\nfunction Discussion(props) {\n  const { posts, body, setBody, submit, isLoggedIn, isContributor } = props;\n\n  return (\n    <div className=\"discussion\">\n      <div className=\"inner\">\n        {posts &&\n          posts.map((item, index) => (\n            <DiscussionItem {...item} key={`${item.contributor}/${item.time_of_post}/${index}`} />\n          ))}\n      </div>\n      {isLoggedIn && isContributor && (\n        <div className=\"editor-wrapper\">\n          <ConfiguredQuill value={body} setValue={setBody} />\n          <div className=\"post-button\" onClick={submit}>\n            Submit\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction DiscussionItem(props) {\n  const { contributor, post } = props;\n\n  return (\n    <>\n      <div className=\"item\">\n        <span style={{ color: randomColor(contributor) }}>{contributor}: </span>\n        <ConfiguredInterweave content={post} />\n      </div>\n      <div className=\"break\" />\n    </>\n  );\n}\n\nfunction Comments(props) {\n  const [showing, setShowing] = useState(true);\n  const toggle = () => setShowing(!showing);\n\n  return (\n    <div className={`comments ${showing ? \"\" : \"minimized\"}`}>\n      <div className=\"comment-header\">\n        <div className={`button ${showing ? \"rotate\" : \"\"}`} onClick={toggle}>\n          <GoChevronLeft />\n        </div>\n        <div className={`title ${showing ? \"\" : \"fade\"}`}>Comments</div>\n      </div>\n      {props.comments.map((comment, index) => (\n        <Comment key={`${comment.contributor}/${comment.time_of_comment}/${index}`} _showing={showing} {...comment} />\n      ))}\n      <div className={`add ${showing ? \"\" : \"fade\"}`}>\n        <textarea />\n        <button type=\"submit\">Submit</button>\n      </div>\n    </div>\n  );\n}\n\nfunction Comment(props) {\n  const { time_of_comment, contributor, body, _showing, likes } = props;\n  const [upvoted, setUpvoted] = useState(false);\n\n  return (\n    <div className={`comment ${_showing ? \"\" : \"fade\"}`}>\n      <div className=\"meta\">\n        <div className=\"contributor\" style={{ color: randomColor(contributor) }}>\n          {contributor}\n        </div>\n        <div className={`likes ${upvoted ? \"upvoted\" : \"\"}`} onClick={() => setUpvoted(!upvoted)}>\n          {upvoted ? likes + 1 : likes} <FiThumbsUp style={{ fontSize: \"12px\" }} />\n        </div>\n        <div className=\"time\">{time_of_comment}</div>\n      </div>\n      <div className=\"body\">{body}</div>\n    </div>\n  );\n}\n\nexport default Conversation;\n","import React, { useState } from \"react\";\nimport Avatar from \"react-avatar\";\nimport { Spinner } from \"reactstrap\";\nimport { FiArrowRightCircle } from \"react-icons/fi\";\n\nimport ConfiguredQuill from \"../components/ConfiguredQuill\";\n\nimport * as conversationService from \"../services/conversation.service\";\nimport useAuth from \"../hooks/useAuth\";\n\nimport { randomColor } from \"../_helpers\";\n\nimport \"./styles/Post.scss\";\nimport \"react-quill/dist/quill.snow.css\";\n\nexport default function Post(props) {\n  const [token] = useAuth();\n\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n\n  const [submitting, setSubmitting] = useState(false);\n\n  function uploadPost() {\n    setSubmitting(true);\n\n    conversationService\n      .postConversation(token, { title, body })\n      .then(data => {\n        setSubmitting(false);\n        props.history.push(`/conversation/${data.convo_id}`);\n      })\n      .catch(_ => {\n        setSubmitting(false);\n      });\n  }\n\n  return (\n    <div className=\"post\">\n      <Editor title={title} setTitle={setTitle} body={body} setBody={setBody} />\n      <div className=\"collaborators\">\n        <div>Collaborators</div>\n        <CollaboratorSection color=\"gray\">Invited</CollaboratorSection>\n        <Invite />\n        <div className=\"post-button\" onClick={uploadPost}>\n          {!submitting ? (\n            <div className=\"text\">Post</div>\n          ) : (\n            <Spinner\n              css={`\n                width: 50px;\n                height: 50px;\n                flex: 1;\n              `}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Editor(props) {\n  const { title, setTitle, body, setBody } = props;\n\n  return (\n    <div className=\"editor\">\n      <input className=\"post-title\" placeholder=\"Title\" value={title} onChange={e => setTitle(e.currentTarget.value)} />\n      <ConfiguredQuill value={body} onChange={val => setBody(val)} />\n    </div>\n  );\n}\n\nfunction CollaboratorSection(props) {\n  const { color, children } = props;\n\n  return (\n    <div className=\"section\">\n      <div className=\"title\">{children}</div>\n      <div className=\"users\">\n        <Collaborator color={color}>Jack Hedaya</Collaborator>\n        <Collaborator color={color}>Abe Kassin</Collaborator>\n        <Collaborator color={color}>Judah Kishk</Collaborator>\n      </div>\n    </div>\n  );\n}\n\nfunction Collaborator(props) {\n  const { color = undefined } = props;\n  return (\n    <div className=\"user\">\n      <Avatar name={props.children} src={props.image || null} color={randomColor(props.children)} round size={25} />\n      <span className=\"name\" style={{ color }}>\n        {props.children}\n      </span>\n    </div>\n  );\n}\n\nfunction Invite(props) {\n  return (\n    <div className=\"invite\">\n      <div className=\"title\">Invite Someone</div>\n      <div className=\"field\">\n        <input className=\"clear-input\" placeholder=\"username\" autoComplete=\"off\" />\n        <FiArrowRightCircle className=\"submit\" />\n      </div>\n    </div>\n  );\n}\n","import { useContext } from \"react\";\nimport { AuthContext } from \"../App\";\n\nexport default function useAuth() {\n  const { token, setToken } = useContext(AuthContext);\n\n  return [token, setToken];\n}\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Navigation from \"./components/Navigation\";\nimport Persist from \"./components/Persist\";\n\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport Conversation from \"./pages/Conversation\";\nimport Post from \"./pages/Post\";\n\nimport \"./App.scss\";\n\n/**\n * @type {React.Context<{ isLoggedIn: boolean, setIsLoggedIn: (val: boolean)=> void, token: string, setToken: (val: string) => void }>}\n */\nconst AuthContext = React.createContext();\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [token, setToken] = useState(null);\n\n  return (\n    <AuthContext.Provider value={{ isLoggedIn, setIsLoggedIn, token, setToken }}>\n      <Persist\n        data={{ token, isLoggedIn }}\n        debounce={500}\n        onMount={data => {\n          setIsLoggedIn(data.isLoggedIn);\n          setToken(data.token);\n        }}\n      />\n      <Router>\n        <div>\n          <Header />\n          <Navigation />\n          <div className=\"content\">\n            <Switch>\n              <Redirect exact from=\"/\" to=\"/home\" />\n              <Route exact path=\"/home\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/register\" component={Register} />\n              <Route exact path=\"/conversation/:id\" component={Conversation} />\n              <SecuredRoute exact path=\"/post\" component={Post} authenticated={isLoggedIn} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nfunction SecuredRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        authenticated === true ? (\n          <Component {...props} {...rest} />\n        ) : (\n          <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\n        )\n      }\n    />\n  );\n}\n\nexport default App;\nexport { AuthContext };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}